name: Build Packages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allow manual triggering
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
          - ttrpg-convert-cli
          - obsidian-cli
          - hass-node-red
      fail-fast: false  # Continue building other packages even if one fails
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install Nix
      uses: cachix/install-nix-action@v24
      with:
        # Use latest stable Nix
        nix_path: nixpkgs=channel:nixos-unstable
        
    - name: Build package
      run: |
        echo "Building ${{ matrix.package }}..."
        nix-build -A ${{ matrix.package }} --show-trace
        
    - name: Test package installation
      run: |
        echo "Testing ${{ matrix.package }} installation..."
        result_path=$(nix-build -A ${{ matrix.package }} --no-out-link)
        echo "Package built successfully at: $result_path"
        
        # List contents of the built package
        echo "Package contents:"
        ls -la "$result_path/"
        
        # Check if binary exists and is executable
        if [[ -d "$result_path/bin" ]]; then
          echo "Binaries found:"
          ls -la "$result_path/bin/"
          
          # Try to run the binary with --help (if it supports it)
          for binary in "$result_path/bin"/*; do
            if [[ -x "$binary" ]]; then
              echo "Testing binary: $(basename "$binary")"
              # Try --help, -h, or --version flags
              "$binary" --help 2>/dev/null || \
              "$binary" -h 2>/dev/null || \
              "$binary" --version 2>/dev/null || \
              echo "Binary exists but doesn't support standard help flags"
            fi
          done
        fi

  # Aggregate job to check if all packages built successfully
  build-summary:
    runs-on: ubuntu-latest
    needs: build
    if: always()
    steps:
    - name: Check build results
      run: |
        if [[ "${{ needs.build.result }}" == "success" ]]; then
          echo "✅ All packages built successfully!"
        else
          echo "❌ Some packages failed to build"
          exit 1
        fi